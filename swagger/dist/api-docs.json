{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Sample spec",
    "description": "Sample spec for Swagger",
    "termsOfService": "http://swagger.io/terms/"
  },
  "basePath": "/",
  "tags": [{
    "name": "Comments",
    "description": "API for comments"
  }],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/comments": {
      "post": {
        "tags": ["Comments"],
        "description": "Create a new comment",
        "operationId": "for the URL",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "Comment",
          "in": "body",
          "description": "A new comment to be added to database",
          "required": true,
          "schema": {
            "$ref": "#/definitions/comment-create"
          }
        }],
        "responses": {
          "200": {
            "description": "Create comment response",
            "schema": {
              "$ref": "#/definitions/comment-create-response"
            }
          }
        }
      }
    },
    "/path/to/method/{someVariable}": {
      "delete": {
        "tags": ["Tag1"],
        "description": "Deletes a something",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "someVariable",
          "in": "path",
          "description": "ID to delete",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/deleteRes"
            }
          }
        }
      },
      "get": {
        "tags": ["Tag1"],
        "description": "Returns the status of something",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "ID",
          "in": "path",
          "description": "ID to fetch",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "comment-create": {
      "properties": {
        "author": {
          "required": true,
          "type": "string",
          "example": "xlei"
        },
        "text": {
          "required": true,
          "type": "string",
          "example": "It is a new comment"
        }
      }
    },
    "response1": {
      "properties": {
        "jobID": {
          "required": true,
          "type": "string",
          "example": "23423456543"
        },
        "request": {
          "required": true,
          "type": "schema",
          "example": {
            "eventId": "mathmaticial",
            "numberRequired": 500
          }
        }
      }
    },
    "comment-create-response": {
      "properties": {
        "author": {
          "required": true,
          "type": "string",
          "example": "xlei"
        },
        "text": {
          "required": true,
          "type": "string",
          "example": "It is a comment created in database"
        }
      }
    },
    "delete": {
      "properties": {
        "jobID": {
          "required": true,
          "type": "string",
          "example": "234344234234"
        },
        "status": {
          "required": true,
          "type": "string",
          "example": "deleted"
        }
      }
    },
    "400error": {
      "properties": {
        "message": {
          "type": "string",
          "example": "400 Bad Request"
        }
      }
    }
  }
}
